- name: Iperf3 Test AttachedConnector
  hosts: all
  roles:
    - rhsiqe.skupper.skupper_test_images
  tasks:
    - name: Main test block
      block:
        - name: Creating the namespaces
          kubernetes.core.k8s:
            state: present
            definition:
              apiVersion: v1
              kind: Namespace
              metadata:
                name: "{{ namespace_name }}"
                labels:
                  e2e.id: "iperf3-attached"
            kubeconfig: "{{ kubeconfig }}"

        - name: Deploy iperf3-server
          kubernetes.core.k8s:
            state: present
            definition:
              apiVersion: apps/v1
              kind: Deployment
              metadata:
                name: iperf3-server
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: iperf3-server
                template:
                  metadata:
                    labels:
                      app: iperf3-server
                  spec:
                    containers:
                      - name: iperf3-server
                        image: quay.io/skupper/lanyard
                        command: ["iperf3", "-s", "-p", "5201"]
                        ports:
                          - containerPort: 5201
            kubeconfig: "{{ kubeconfig }}"
            namespace: "{{ namespace_name }}"
          when:
            - "'iperf3-workload'  in inventory_hostname"

        - name: Creating the iperf3 service for iperf3-workload
          kubernetes.core.k8s:
            state: present
            definition:
              apiVersion: v1
              kind: Service
              metadata:
                name: iperf3-server
                namespace: "{{ namespace_name }}"
              spec:
                selector:
                  app: iperf3-server
                ports:
                  - name: iperf3
                    protocol: TCP
                    port: 5201
                    targetPort: 5201
            kubeconfig: "{{ kubeconfig }}"
          when:
            - "'iperf3-workload' in inventory_hostname"

        - name: Creating Skupper resources on iperf3-hub namespace
          skupper.v2.resource:
            path: "{{ item }}"
            kubeconfig: "{{ kubeconfig }}"
            namespace: "{{ namespace_name }}"
          with_items:
            - "{{ playbook_dir }}/resources/iperf3-hub/site.yml"
            - "{{ playbook_dir }}/resources/iperf3-hub/attached-connector-binding.yml"
          when:
            - "'iperf3-hub' in inventory_hostname"

        - name: Creating Skupper resources on iperf3-client namespace
          skupper.v2.resource:
            path: "{{ item }}"
            namespace: "{{ namespace_name }}"
            kubeconfig: "{{ kubeconfig }}"
          with_items:
            - "{{ playbook_dir }}/resources/iperf3-client/site.yml"
            - "{{ playbook_dir }}/resources/iperf3-client/listener.yml"
          when:
            - "'iperf3-client' in inventory_hostname"

        - name: Creating Skupper resources on iperf3-workload namespace
          skupper.v2.resource:
            path: "{{ playbook_dir }}/resources/iperf3-workload/attached-connector.yml"
            kubeconfig: "{{ kubeconfig }}"
            namespace: "{{ namespace_name }}"
          when:
            - "'iperf3-workload' in inventory_hostname"

        - name: Issue a Skupper access token from iperf3-hub
          skupper.v2.token:
            namespace: "{{ namespace_name }}"
            kubeconfig: "{{ kubeconfig }}"
            name: iperf3-grant
            redemptions_allowed: 2
          register: iperf3
          when:
            - "'iperf3-hub' in inventory_hostname"

        - name: Apply token to iperf3-client and iperf3-server
          skupper.v2.resource:
            def: "{{ hostvars['iperf3-hub']['iperf3']['token'] }}"
            namespace: "{{ namespace_name }}"
            kubeconfig: "{{ kubeconfig }}"
          when:
            - "'iperf3-client' in inventory_hostname"

        - name: Wait for the AttachedConnectorBinding to be in READY state
          kubernetes.core.k8s_info:
            api_version: skupper.io/v2alpha1
            kind: AttachedConnectorBinding
            name: iperf3
            namespace: "{{ namespace_name }}"
            kubeconfig: "{{ kubeconfig }}"
          register: acb
          until: acb.resources | length > 0 and acb.resources[0].status.status == "Ready"
          retries: 10
          delay: 10
          when: "'iperf3-hub' in inventory_hostname"

        - name: Creating a JOB to test the connection
          kubernetes.core.k8s:
            state: present
            src: "{{ playbook_dir }}/resources/iperf3-client/iperf3-consumer.yaml"
            kubeconfig: "{{ kubeconfig }}"
            namespace: "{{ namespace_name }}"
          when:
            - "'iperf3-client' in inventory_hostname"

        - name: Wait for the job to be completed
          kubernetes.core.k8s_info:
            api_version: batch/v1
            kind: Job
            name: iperf-test
            namespace: "{{ namespace_name }}"
            kubeconfig: "{{ kubeconfig }}"
          register: job
          until: job.resources | length > 0 and (
            (job.resources[0].status.succeeded is defined and job.resources[0].status.succeeded == 1) or
            (job.resources[0].status.failed is defined and job.resources[0].status.failed > 0)
            )
          retries: 10
          delay: 10
          when: "'iperf3-client' in inventory_hostname"

        - name: Print the iperf test job logs
          kubernetes.core.k8s_log:
            name: iperf-test
            kind: Job
            namespace: "{{ namespace_name }}"
            kubeconfig: "{{ kubeconfig }}"
          register: job_logs
          when: "'iperf3-client' in inventory_hostname"

        - name: Display the job logs
          ansible.builtin.debug:
            var: job_logs.log
          when: "'iperf3-client' in inventory_hostname"

        - name: Check iperf connection success
          ansible.builtin.assert:
            that:
              - "'connected to' in job_logs.log"
              - "'iperf Done.' in job_logs.log"
            fail_msg: "iperf test failed"
          when: "'iperf3-client' in inventory_hostname"

      always:
        - name: Teardown tests
          kubernetes.core.k8s:
            state: absent
            definition:
              apiVersion: v1
              kind: Namespace
              metadata:
                name: "{{ namespace_name }}"
            kubeconfig: "{{ kubeconfig }}"
          when:
            - not skip_teardown | default(false) | bool
