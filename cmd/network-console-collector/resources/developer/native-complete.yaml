---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: network-console-prometheus
  labels:
    app.kubernetes.io/part-of: skupper-network-console
rules:
- apiGroups:
  - ""
  resources:
  - services
  - configmaps
  - pods
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: network-console-prometheus
  labels:
    app.kubernetes.io/part-of: skupper-network-console
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: network-console-prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: network-console-prometheus
subjects:
- kind: ServiceAccount
  name: network-console-prometheus
---
apiVersion: v1
data:
  prometheus.yml: |
    global:
      scrape_interval:     15s
      evaluation_interval: 15s
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
    rule_files:
    scrape_configs:
      - job_name: network-console-service
        kubernetes_sd_configs:
        - role: service
          kubeconfig_file: ""
          follow_redirects: true
          enable_http2: true
          namespaces:
            own_namespace: true
        scheme: https
        tls_config:
          insecure_skip_verify: true
        follow_redirects: true
        enable_http2: true
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
          regex: network-console-collector
          action: keep
        - source_labels: [__meta_kubernetes_service_port_name]
          regex: https
          action: keep
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
          replacement: $1
        - source_labels: [__meta_kubernetes_namespace]
          target_label: namespace
        - source_labels: [__meta_kubernetes_service_name]
          target_label: service

  web-config.yml: |
    # TLS configuration.
    #
    #tls_server_config:
    #  cert_file: /etc/tls/certs/tls.crt
    #  key_file: /etc/tls/certs/tls.key
kind: ConfigMap
metadata:
  name: prometheus-server-config
  labels:
    app.kubernetes.io/part-of: skupper-network-console
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: network-console-prometheus
    app.kubernetes.io/part-of: skupper-network-console
    app.kubernetes.io/component: metrics
  name: network-console-prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: network-console-prometheus
  template:
    metadata:
      labels:
        app.kubernetes.io/name: network-console-prometheus
        app.kubernetes.io/part-of: skupper-network-console
        app.kubernetes.io/component: metrics
    spec:
      containers:
      - args:
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/prometheus/
        - --web.config.file=/etc/prometheus/web-config.yml
        image: quay.io/prometheus/prometheus:v2.42.0
        imagePullPolicy: Always
        name: prometheus-server
        volumeMounts:
        - mountPath: /etc/prometheus
          name: prometheus-config
        - mountPath: /prometheus
          name: prometheus-storage-volume
      serviceAccount: network-console-prometheus
      serviceAccountName: network-console-prometheus
      volumes:
      - configMap:
          defaultMode: 420
          name: prometheus-server-config
        name: prometheus-config
      - emptyDir: {}
        name: prometheus-storage-volume
---
apiVersion: v1
kind: Service
metadata:
  name: network-console-prometheus
  labels:
    app.kubernetes.io/part-of: skupper-network-console
    app.kubernetes.io/name: network-console-prometheus
spec:
  ports:
  - name: prometheus
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app.kubernetes.io/name: network-console-prometheus
    app.kubernetes.io/component: metrics
  type: ClusterIP
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: network-console-issuer
  labels:
    app.kubernetes.io/part-of: skupper-network-console
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: network-console-cert
  labels:
    app.kubernetes.io/part-of: skupper-network-console
spec:
  commonName: network-console
  secretName: network-console-certs
  privateKey:
    algorithm: ECDSA
    size: 256
  issuerRef:
    name: network-console-issuer
    kind: Issuer
    group: cert-manager.io
---
apiVersion: skupper.io/v1alpha1
kind: Certificate
metadata:
  name: skupper-management-client
  labels:
    app.kubernetes.io/part-of: skupper-network-console
spec:
  ca: skupper-local-ca
  hosts:
  - skupper-router-local
  client: true
  subject: skupper-router-local
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/part-of: skupper-network-console
    app.kubernetes.io/name: network-console-collector
    app.kubernetes.io/component: server
  name: network-console-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: skupper-network-console
      app.kubernetes.io/name: network-console-collector
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: skupper-network-console
        app.kubernetes.io/name: network-console-collector
        app.kubernetes.io/component: server
    spec:
      containers:
      - image: quay.io/skupper/network-console-collector:v2-latest
        imagePullPolicy: Always
        name: network-console
        args:
          - -listen=:8443
          - -cors-allow-all
          - -tls-cert=/etc/console/tls.crt
          - -tls-key=/etc/console/tls.key
          - -router-endpoint=amqps://skupper-router-local
          - -router-tls-ca=/etc/messaging/ca.crt
          - -router-tls-cert=/etc/messaging/tls.crt
          - -router-tls-key=/etc/messaging/tls.key
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/
          name: network-console-certs
        - mountPath: /etc/messaging/
          name: skupper-management-client
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
      volumes:
      - name: network-console-certs
        secret:
          defaultMode: 420
          secretName: network-console-certs
      - name: skupper-management-client
        secret:
          defaultMode: 420
          secretName: skupper-management-client
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/part-of: skupper-network-console
    app.kubernetes.io/name: network-console-collector
  name: network-console-collector
spec:
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: 8443
  selector:
    app.kubernetes.io/name: network-console-collector
    app.kubernetes.io/component: server
  type: LoadBalancer

