---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: network-console-collector
  labels:
    app.kubernetes.io/part-of: skupper-network-console
    app.kubernetes.io/name: network-console-collector
  annotations:
    serviceaccounts.openshift.io/oauth-redirectreference.primary: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"network-console"}}'
---
apiVersion: skupper.io/v1alpha1
kind: Certificate
metadata:
  name: skupper-management-client
spec:
  ca: skupper-local-ca
  hosts:
  - skupper-router-local
  client: true
  subject: skupper-router-local
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/part-of: skupper-network-console
    app.kubernetes.io/name: network-console-collector
  name: network-console-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: skupper-network-console
      app.kubernetes.io/name: network-console-collector
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: skupper-network-console
        app.kubernetes.io/name: network-console-collector
        app.kubernetes.io/component: server
    spec:
      serviceAccountName: network-console-collector
      containers:
      - name: network-console
        image: quay.io/skupper/network-console-collector:v2-latest
        imagePullPolicy: Always
        args:
          - -listen=127.0.0.1:8080
          - -router-endpoint=amqps://skupper-router-local
          - -router-tls-ca=/etc/messaging/ca.crt
          - -router-tls-cert=/etc/messaging/tls.crt
          - -router-tls-key=/etc/messaging/tls.key
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/messaging/
          name: skupper-management-client
        ports:
        - containerPort: 8080
          name: web
          protocol: TCP
      - name: oauth-proxy
        image: quay.io/openshift/origin-oauth-proxy:4.14.0
        imagePullPolicy: Always
        args:
        - --https-address=:8443
        - --provider=openshift
        - --openshift-service-account=network-console-collector
        - --upstream=http://127.0.0.1:8080
        - --tls-cert=/etc/tls/proxy-certs/tls.crt
        - --tls-key=/etc/tls/proxy-certs/tls.key
        - --cookie-secret=SECRET
        - -skip-auth-regex=^/metrics
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /etc/tls/proxy-certs/
          name: network-console-certs
      volumes:
      - name: network-console-certs
        secret:
          defaultMode: 420
          secretName: network-console-certs
      - name: skupper-management-client
        secret:
          defaultMode: 420
          secretName: skupper-management-client
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.openshift.io/serving-cert-secret-name: network-console-certs
  labels:
    app.kubernetes.io/part-of: skupper-network-console
    app.kubernetes.io/name: network-console-collector
  name: network-console-collector
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    app.kubernetes.io/name: network-console-collector
    app.kubernetes.io/component: server
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app.kubernetes.io/part-of: skupper-network-console
    app.kubernetes.io/name: network-console
  name: network-console
spec:
  tls:
    termination: reencrypt
    insecureEdgeTerminationPolicy: Redirect
  port:
    targetPort: https
  to:
    kind: Service
    name: network-console-collector
    weight: 100
