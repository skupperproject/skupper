apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: connectors.skupper.io
spec:
  group: skupper.io
  versions:
    - name: v2alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: |-
            A connector binds a local workload to listeners in remote sites. Listeners
            and connectors are matched by routing key.

            On Kubernetes, a Connector resource has a selector and port for specifying
            workload pods.

            On Docker, Podman, and Linux, a Connector resource has a host and port for
            specifying a local server. Optionally, Kubernetes can also use a host and port.
          type: object
          properties:
            spec:
              type: object
              properties:
                routingKey:
                  description: |-
                    The identifier used to route traffic from listeners to connectors.
                    To expose a local workload to a remote site, the remote listener and
                    the local connector must have matching routing keys.
                  type: string
                port:
                  description: |-
                    The port on the target server to connect to.
                  type: integer
                selector:
                  description: |-
                    A Kubernetes label selector for specifying target server pods. It uses
                    <label-name>=<label-value> syntax.

                    On Kubernetes, either selector or host is required.
                  type: string
                host:
                  description: |-
                    The hostname or IP address of the server. This is an alternative to
                    selector for specifying the target server.

                    On Kubernetes, either selector or host is required.

                    On Docker, Podman, or Linux, host is required.
                  type: string
                tlsCredentials:
                  description: |-
                    The name of a bundle of TLS certificates used for secure router-to-server
                    communication. The bundle contains the trusted server certificate
                    (usually a CA). It optionally includes a client certificate and key for
                    mutual TLS.

                    On Kubernetes, the value is the name of a Secret in the current namespace.
                    On Docker, Podman, and Linux, the value is the name of a directory under
                    input/certs/ in the current namespace.
                  type: string
                useClientCert:
                  description: |-
                    Send the client certificate when connecting in order to enable mutual TLS.
                  type: boolean
                verifyHostname:
                  description: |-
                    If true, require that the hostname of the server connected to matches the
                    hostname in the server's certificate.
                  type: boolean
                type:
                  type: string
                includeNotReadyPods:
                  description: |-
                    If true, include server pods in the NotReady state.
                  type: boolean
                exposePodsByName:
                  description: |-
                    If true, expose each pod as an individual service.
                  type: boolean
                settings:
                  description: |-
                    A map containing additional settings. Each map entry has a string name and a
                    string value.

                    Note: In general, we recommend not changing settings from their default values.
                  type: object
                  additionalProperties:
                    type: string
              required:
              - routingKey
              - port
              oneOf:
              - required:
                - selector
              - required:
                - host
            status:
              type: object
              properties:
                status:
                  description: |-
                    The current state of the resource.
                    - `Pending`: The resource is being processed.
                    - `Error`: There was an error processing the resource. See `message` for more information.
                    - `Ready`: The resource is ready to use.
                  type: string
                message:
                  description: |-
                    A human-readable status message. Error messages are reported here.
                  type: string
                conditions:
                  type: array
                  description: |-
                    A set of named conditions describing the current state of the resource.
                    - `Configured`: The connector configuration has been applied to the router.
                    - `Matched`: There is at least one listener corresponding to this connector.
                    - `Ready`: The connector is ready to use. All other conditions are true.
                  items:
                    type: object
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                hasMatchingListener:
                  description: |-
                    True if there is at least one listener with a matching routing key (usually in a remote site).
                  type: boolean
                selectedPods:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      ip:
                        type: string
      subresources:
        status: {}
      additionalPrinterColumns:
      - name: Routing Key
        type: string
        description: The key that ties connectors and listeners together
        jsonPath: .spec.routingKey
      - name: Port
        type: integer
        description: The port to connect to
        jsonPath: .spec.port
      - name: Host
        type: string
        description: The host to connect to
        jsonPath: .spec.host
      - name: Selector
        type: string
        description: The selector that identifies the pods to connect to
        jsonPath: .spec.selector
      - name: Status
        type: string
        description: The status of the connector
        jsonPath: .status.status
      - name: Has Matching Listener
        type: boolean
        description: Whether there is at least one listener in the network with a matching routing key.
        jsonPath: .status.hasMatchingListener
      - name: Message
        type: string
        description: Any human readable message relevant to the connector
        jsonPath: .status.message
  scope: Namespaced
  names:
    plural: connectors
    singular: connector
    kind: Connector
    shortNames:
    - cnr
